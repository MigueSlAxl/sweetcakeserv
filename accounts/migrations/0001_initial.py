# Generated by Django 3.2.19 on 2023-05-09 22:53

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_client', models.BooleanField(default=True, verbose_name='Cliente')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Admin')),
                ('imagen', models.ImageField(null=True, upload_to='accounts/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='users', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='users', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(default='', max_length=12, verbose_name='cargo')),
                ('rut', models.CharField(blank=True, max_length=12, null=True, verbose_name='RUT')),
                ('direccion', models.CharField(blank=True, max_length=255, null=True, verbose_name='direccion')),
                ('ntelefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='numero de telefono')),
                ('nemergencia', models.CharField(blank=True, max_length=15, null=True, verbose_name='numero de emergencia')),
                ('local', models.CharField(blank=True, max_length=50, null=True, verbose_name='local')),
                ('imagen', models.ImageField(null=True, upload_to='accounts/')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha actualizacion')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha eliminacion')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userstandard', to='accounts.user')),
            ],
            options={
                'verbose_name': 'userProfile',
                'verbose_name_plural': 'userProfiles',
                'ordering': ['id'],
            },
        ),
    ]
